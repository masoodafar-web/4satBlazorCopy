@using System.Net
@using System.Security.Claims
@using newFace.Shared.Models
@using newFace.Shared.Models.Resource
@using System.Net.Http.Json
@using System.Security.Claims
@using System.Text.Json
@using Newtonsoft.Json

@inject HttpClient Http
@inject IJSRuntime JSRuntime


<div class="collapse show" id="collapseComment">
    <hr>
    @*@using (Ajax.BeginForm("Create", "Comments", new AjaxOptions { HttpMethod = "POST", OnSuccess = "SuccessProductComment", OnFailure = "FailMessage", UpdateTargetId = "singlecommentpost_" + Model.ProductVm.Product.Id, InsertionMode = InsertionMode.Replace }))*@

    <div class="d-lg-flex justify-content-between">
        <p>
            اگر این محصول را قبلا از  خریده باشید، نظر شما به عنوان خریدار @productTypeTitle ثبت خواهد شد.
        </p>

    </div>
    @* بخش ایجاد کامنت *@
    <div class="card-footer p-2">
        <div class="input-group w-100">



            <textarea @bind="Description" @bind:event="oninput" class="form-control" placeholder="نوشتن نظر ..." rows="2" style="height: 4rem" data-emojiable="true"></textarea>
            <!--<input type="text" class="form-control" placeholder="نوشتن نظر ..." aria-label="" aria-describedby="basic-addon1">-->
            <div class="input-group-append">
                <button class="btn btn-secondary" type="button" @onclick="sendComment">ارسال</button>
            </div>
        </div>
    </div>
    @* بخش ایجاد کامنت *@



    @* نمایش لیست کامنت ها *@
    <div id="singlecommentpost_@ProductId">

        @if (Model != null)
        {
            if (Model.Any())
            {
                //var postId = Model.FirstOrDefault().PostId;



                foreach (var item2 in Model)
                {
                    <SingleComment Model="item2" OnClickEditComment="loadEditComment" OnClickDeleteComment="CommentIdForDelete" OnClickReplyComment="loadReplyComment" />
                }


            }
        }

        @*<div class="text-center" id="commentsLoading_@ProductId">
                <div class="spinner-grow text-info"></div>
            </div>*@

    </div>
    @* نمایش لیست کامنت ها *@


</div>
@* مودال ویرایش پست *@
<div class="modal fade modal-post" id="edit-comment-modal" role="dialog" aria-labelledby="start-post-modalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">


            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalScrollableTitle"><i class="fas fa-reply"></i> ویرایش نظر</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"><i class="far fa-times-circle"></i></span>
                </button>
            </div>
            <div class="modal-body">
                <div class="card-footer p-2">
                    <div class="input-group w-100">

                        <textarea @bind="EditDescription" @bind:event="oninput" class="form-control" placeholder="نوشتن نظر ..." rows="2" style="height: 4rem" data-emojiable="true"></textarea>

                        <div class="input-group-append">
                            <button class="btn btn-info" type="button" @onclick="editComment" data-dismiss="modal">ارسال</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">

                <button type="button" class="btn btn-secondary send-btn" data-dismiss="modal"><i class="fas fa-times-circle"></i> انصراف</button>&nbsp;
            </div>


        </div>
    </div>
</div>
@* مودال ویرایش پست *@


@* مودال حذف کامنت *@
<div class="modal fade modal-post" id="delete-commend-modal" role="dialog" aria-labelledby="start-post-modalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalScrollableTitle"><i class="fas fa-exclamation"></i> آیا از حذف نظر خود مطمئن هستید؟</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"><i class="far fa-times-circle"></i></span>
                </button>
            </div>
            <div class="modal-body">


                <h6 class="text-primary">
                    با حذف این نظر تمام پاسخ های مرتبط حذف خواهد شد!!
                </h6>
            </div>
            <div class="modal-footer">

                <button type="button" class="btn btn-secondary send-btn" data-dismiss="modal"><i class="fas fa-times-circle"></i> انصراف</button>&nbsp;
                <button type="button" class="btn btn-danger px-4 send-btn" @onclick="deleteComment" data-dismiss="modal"><i class="fas fa-share-square"></i> حذف</button>
            </div>

        </div>
    </div>
</div>
@* مودال حذف کامنت *@


<div class="modal fade modal-post" id="reply-comment-modal" role="dialog" aria-labelledby="start-post-modalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalScrollableTitle"><i class="fa fa-reply"></i> پاسخ به نظر</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"><i class="far fa-times-circle"></i></span>
                </button>
            </div>
            <div class="modal-body">
                <div class="card-footer p-2">
                    <div class="input-group w-100">



                        <textarea @bind="ReplyDescription" @bind:event="oninput" class="form-control" placeholder="نوشتن نظر ..." rows="2" style="height: 4rem" data-emojiable="true" onclick="InitializemojiPicker()"></textarea>

                        <div class="input-group-append">
                            <button class="btn btn-secondary" type="button" @onclick="replyComment" data-dismiss="modal">ارسال</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary send-btn" data-dismiss="modal"><i class="fas fa-times-circle"></i> انصراف</button>&nbsp;
            </div>

        </div>
    </div>
</div>
@if (reseting)
{
    <Spinner />

}

@code {

    private bool _IsMobileDevice;
    private List<Comment> Model;
    private string Description;
    private bool reseting;

    private string EditDescription;
    private string ReplyDescription;
    private int deleteCommentId;


    private Comment editCommentModel;
    private Comment replyCommentModel;

    [Parameter]
    public int? ProductId { get; set; } = null;
    [Parameter]
    public int? PostId { get; set; } = null;
    [Parameter]
    public int? BlogId { get; set; } = null;
    [Parameter]
    public string productTypeTitle { get; set; }


    [CascadingParameter]
    protected Task<AuthenticationState> AuthState { get; set; }

    protected override async Task OnInitializedAsync()
    {

        _IsMobileDevice =
            await JSRuntime.InvokeAsync<bool>("isMobileDevice");
        StateHasChanged();

        await ResetCommentAsync();
    }

    /// <summary>
    /// لیست کامنت ها دوباره لود میشه
    /// </summary>
    /// <returns></returns>
    private async Task ResetCommentAsync()
    {
        reseting = true;
        StateHasChanged();

        ClaimsPrincipal user = (await AuthState).User;

        if (user.Identity.IsAuthenticated)
        {
            var SecurityStamp = user.FindFirst("SecurityStamp");



            var requestComment = new RequestComment { Token = SecurityStamp.Value, PageNumber = 1, ProductId = ProductId };
            //var req = JsonConvert.SerializeObject(requestComment);
            var result = await Http.PostAsJsonAsync("api/Comment", requestComment);
            if (result.StatusCode == HttpStatusCode.OK)
            {

                var resultComment = result.Content.ReadFromJsonAsync<ResultComment>().Result;
                Model = resultComment.CommentList;
                reseting = false;
                StateHasChanged();
            }

        }
    }

    /// <summary>
    /// ارسال کامنت
    /// </summary>
    /// <returns></returns>
    private async Task sendComment()
    {


        ClaimsPrincipal user = (await AuthState).User;

        if (user.Identity.IsAuthenticated)
        {
            var SecurityStamp = user.FindFirst("SecurityStamp");
            var UserId = user.FindFirst("UserId");

            var requestComment = new RequestComment
            {
                Token = SecurityStamp.Value,
                ProductId = ProductId,
                Comment = new Comment
                {
                    ProductId = ProductId,
                    UserId = UserId.Value,
                    Desc = Description,
                    FirstParentId = null,
                    ParentId = null,
                    BlogId = null,
                    PostId = null,
                    Id = 0,
                    CDate = DateTime.Now,
                    Rank = null,
                }

            };
            //var req = JsonConvert.SerializeObject(requestComment);
            var result = await Http.PostAsJsonAsync("api/Comment", requestComment);
            if (result.StatusCode == HttpStatusCode.OK)
            {
                var resultCart = result.Content.ReadFromJsonAsync<Result>().Result;
                if (resultCart.Statue == Enums.Statue.Success)
                {
                    await ResetCommentAsync();
                    Description = string.Empty;

                    WebAlert.alert(resultCart.Message, "success" ,true);
                    Task.Delay(5000).ContinueWith(t => WebAlert.alert(resultCart.Message));

                }

            }

        }
    }



    /// <summary>
    /// مشخصات کامنت رو میگیره از کامپوننت سینگل کامنت توسط کال بک اونت و میریزه تو آبجکت ادیت کامنت مودال
    /// </summary>
    /// <param name="editcomment"></param>
    /// <returns></returns>
    private async Task loadEditComment(Comment editcomment)
    {
        EditDescription = editcomment.Desc;
        editCommentModel = editcomment;
    }

    /// <summary>
    /// متد ویرایش کامنت
    /// </summary>
    /// <returns></returns>
    private async Task editComment()
    {


        ClaimsPrincipal user = (await AuthState).User;

        if (user.Identity.IsAuthenticated)
        {
            var SecurityStamp = user.FindFirst("SecurityStamp");
            var UserId = user.FindFirst("UserId");

            var requestComment = new RequestComment
            {
                Token = SecurityStamp.Value,
                ProductId = ProductId,
                Comment = new Comment
                {
                    ProductId = ProductId,
                    UserId = UserId.Value,
                    Desc = EditDescription,
                    FirstParentId = editCommentModel.FirstParentId,
                    ParentId = editCommentModel.ParentId,
                    BlogId = editCommentModel.BlogId,
                    PostId = editCommentModel.PostId,
                    Id = editCommentModel.Id,
                    CDate = editCommentModel.CDate,
                    Rank = null,
                }

            };
            //var req = JsonConvert.SerializeObject(requestComment);
            var result = await Http.PostAsJsonAsync("api/Comment", requestComment);
            if (result.StatusCode == HttpStatusCode.OK)
            {
                var resultCart = result.Content.ReadFromJsonAsync<Result>().Result;
                if (resultCart.Statue == Enums.Statue.Success)
                {
                    await ResetCommentAsync();
                    EditDescription = string.Empty;
                }

            }

        }
    }

    /// <summary>
    /// شناسه کامنت رو میگیره از کامپوننت سینگل کامنت توسط کال بک اونت و میریزه تو متغیر دیلیت کامنت آی دی
    /// </summary>
    /// <param name="deletecommentid"></param>
    /// <returns></returns>
    private async Task CommentIdForDelete(int deletecommentid)
    {
        deleteCommentId = deletecommentid;
    }

    /// <summary>
    /// متد حذف کامنت
    /// </summary>
    /// <returns></returns>
    private async Task deleteComment()
    {


        ClaimsPrincipal user = (await AuthState).User;

        if (user.Identity.IsAuthenticated)
        {
            var SecurityStamp = user.FindFirst("SecurityStamp");
            var UserId = user.FindFirst("UserId");

            var requestComment = new RequestComment
            {
                Token = SecurityStamp.Value,
                ProductId = ProductId,
                DeleteId = deleteCommentId,
                Comment = new Comment
                {
                    ProductId = ProductId,
                    UserId = UserId.Value,
                    Id = deleteCommentId
                }

            };
            var result = await Http.PostAsJsonAsync("api/Comment", requestComment);
            if (result.StatusCode == HttpStatusCode.OK)
            {
                var resultCart = result.Content.ReadFromJsonAsync<Result>().Result;
                if (resultCart.Statue == Enums.Statue.Success)
                    await ResetCommentAsync();


            }

        }
    }


    /// <summary>
    /// مشخصات کامنت رو میگیره از کامپوننت سینگل کامنت توسط کال بک اونت و میریزه تو آبجکت ادیت کامنت مودال
    /// </summary>
    /// <param name="editcomment"></param>
    /// <returns></returns>
    private async Task loadReplyComment(Comment editcomment)
    {
        replyCommentModel = new Comment()
        {
            BlogId = editcomment.BlogId,
            CDate = DateTime.Now,
            Desc = ReplyDescription,
            FirstParentId = editcomment.FirstParentId != null ? editcomment.FirstParentId : editcomment.Id,
            ParentId = editcomment.Id,
            PostId = editcomment.PostId,
            ProductId = editcomment.ProductId,
            Rank = null,

        };
    }

    /// <summary>
    /// متد پاسخ کامنت
    /// </summary>
    /// <returns></returns>
    private async Task replyComment()
    {


        ClaimsPrincipal user = (await AuthState).User;

        if (user.Identity.IsAuthenticated)
        {
            var SecurityStamp = user.FindFirst("SecurityStamp");
            var UserId = user.FindFirst("UserId");

            replyCommentModel.UserId = UserId.Value;
            replyCommentModel.Desc = ReplyDescription;
            replyCommentModel.CDate=DateTime.Now;
            var requestComment = new RequestComment
            {
                Token = SecurityStamp.Value,
                ProductId = ProductId,
                Comment = replyCommentModel

            };
            var result = await Http.PostAsJsonAsync("api/Comment", requestComment);
            if (result.StatusCode == HttpStatusCode.OK)
            {
                var resultCart = result.Content.ReadFromJsonAsync<Result>().Result;
                if (resultCart.Statue == Enums.Statue.Success)
                {
                    await ResetCommentAsync();
                    ReplyDescription = string.Empty;
                }

            }

        }
    }
}