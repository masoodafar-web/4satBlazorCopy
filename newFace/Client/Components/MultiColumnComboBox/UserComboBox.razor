@using System.Net
@using System.Net.Http
@using Microsoft.AspNetCore.Authorization
@using System.Net.Http.Headers
@using System.Net.Http.Json
@using System.Security.Claims
@using newFace.Shared.Models.Resource

@inject HttpClient Http
<!-- Actual search box -->
<div class="comboBox overflow-hidden">

    @*<div class="form-group has-search">
        <span class="fa fa-search form-control-feedback"></span>
        <input @bind="_delectedId" aria-hidden="True" name="@Name" hidden />
        <input type="text" class="form-control" placeholder="جستجو" @onkeyup="keyHandler" @onfocus="keyHandler"  @bind="_searchText" @bind:event="oninput">
        <span class="fa fa-search form-control-feedback"></span>

    </div>*@
    
    
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            @if (searching)
            {
                <span class="input-group-text">

                    <div class="spinner-border text-info spinner-border-sm" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </span>

            }
            else
            {
                <span class="input-group-text"><i class="fa fa-search"></i></span>

            }
        </div>
        <input @bind="_selectedId" aria-hidden="True" name="@Name" hidden />
        <input type="text" class="form-control" placeholder="جستجو" @onkeyup="keyHandler" @onfocus="keyHandler"  @bind="_searchText" @bind:event="oninput">
        @if (!string.IsNullOrEmpty(_selectedId))
        {
            <div class="input-group-append" @onclick="cancelSelected">
                <span class="input-group-text"><i class="fa fa-times"></i></span>
            </div>
        }
        
    </div>
    @if (_comboBoxItems != null)
    {
        if (_comboBoxItems.Any())
        {
            <div class="comboBoxItems overflow-auto">
                @foreach (var item in _comboBoxItems)
                {
                    <div @onclick="e => clickOnUser(item.StringId)" id="itemBlock" class="p-2">
                        <div class="combo-photo" style="background-image: url(../@item.Image);"></div>
                        <div class="combo-name">@item.ShowTitle</div>
                    </div>

                }

            </div>
        }
        @*else
        {
            <div class="comboBoxItems overflow-auto">
                <strong class="p-2">موردی یافت نشد</strong>

            </div>
        }*@

    }

</div>





@code {

    [Parameter]
    public string Name { get; set; } = string.Empty;
    private List<ComboBoxResult> _comboBoxItems;
    private string _searchText = string.Empty;
    public string _selectedId = string.Empty;
    private bool searching = false;
    [CascadingParameter]
    protected Task<AuthenticationState> AuthState { get; set; }

    public string getUserId()
    {
        return _selectedId;
    }

    private void cancelSelected()
    {
        _selectedId = string.Empty;
        _searchText = string.Empty;
        _comboBoxItems = new List<ComboBoxResult>();
    }

    private void clickOnUser(string Id)
    {
        _selectedId = Id;
        if (_comboBoxItems.Any())
            _searchText = _comboBoxItems.FirstOrDefault(p => p.StringId == Id).Title;

        _comboBoxItems = new List<ComboBoxResult>();
    }

    private async Task keyHandler()
    {

        searching = true;
        StateHasChanged();

        ClaimsPrincipal user = (await AuthState).User;

        if (user.Identity.IsAuthenticated)
        {
            var SecurityStamp = user.FindFirst("SecurityStamp");

            var requestShop = new RequestShop { Token = SecurityStamp.Value, FilterParam = _searchText };

            var result = await Http.PostAsJsonAsync("api/GetUserNames", requestShop);
            if (result.StatusCode == HttpStatusCode.OK)
            {
                var resultUserSearch = result.Content.ReadFromJsonAsync<ResultUserSearch>().Result;

                _comboBoxItems = resultUserSearch.ComboBoxItems;
                StateHasChanged();

                if (!(_comboBoxItems.Any(p => p.StringId == _selectedId) && _comboBoxItems.Count == 1))
                {
                    _selectedId = string.Empty;
                    StateHasChanged();

                }
            }

        }
        searching = false;
        StateHasChanged();
    }
}
