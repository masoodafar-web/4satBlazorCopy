@using newFace.Shared.Models.Education;
@using newFace.Shared.Models.Resource;
@using static newFace.Shared.Models.Resource.Enums;
@using System.Net.Http;
@inject HttpClient Http
@if (Sliders == null)
{
    <img class="d-block w-100 SliderSvg"  data-src="holder.js/1000x1000?auto=yes&amp;bg=777&amp;fg=555&amp;text=First slide" alt="First slide [800x400]" src="data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_171e7c7e8a7%20text%20%7B%20fill%3A%23555%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_171e7c7e8a7%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23777%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22285.9140625%22%20y%3D%22217.7%22%3EFirst%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E" data-holder-rendered="true">
}
else
{

    <div id="carouselExampleIndicators"
         class="carousel slide" data-ride="carousel">
        <ol id="myCarousel-indicators" class="carousel-indicators">
            @if (Sliders.Any())
            {
                @for (int i = 0; i < Sliders.Count; i++)
                {
                    if (i == 0)
                    {
                        <li data-target="#carouselExampleIndicators" data-slide-to="@i" class="active glyphicon-ban-circle"></li>

                    }
                    else
                    {
                        <li data-target="#carouselExampleIndicators" data-slide-to="@i"></li>

                    }
                }
            }
            else
            {
                <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active glyphicon-ban-circle"></li>
                <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
            }

        </ol>
        <div class="carousel-inner ">
            @if (Sliders.Any())
            {
                <div class="carousel-item  active">
                    <img class="d-block w-100" src="@Sliders.First().Img" alt="@Sliders.First().Name">
                </div>

                @foreach (var slider in Sliders.Skip(1))
                {

                    <div class="carousel-item">
                        <img class="d-block w-100" src="@slider.Img" alt="@slider.Name">
                    </div>
                }
            }
            else
            {
                <div class="carousel-item  active">
                    <img class="d-block w-100 SliderSvg"  data-src="holder.js/1000x1000?auto=yes&amp;bg=777&amp;fg=555&amp;text=First slide" alt="First slide [800x400]" src="data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_171e7c7e8a7%20text%20%7B%20fill%3A%23555%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_171e7c7e8a7%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23777%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22285.9140625%22%20y%3D%22217.7%22%3EFirst%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E" data-holder-rendered="true">
                </div>
            
            }

        </div>

    </div>


}

@code{

    private List<ShopHomeSlider> Sliders;

    [Parameter]
    public ProductType productType { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.PostAsJsonAsync("api/Sliders", new RequestShop() { productType = productType });
        var content = response.Content.ReadFromJsonAsync<ResultShop>().Result;
        Sliders = content.Sliders;
    }
}
